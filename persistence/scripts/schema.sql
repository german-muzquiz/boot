DROP TABLE IF EXISTS OAUTH_CLIENT_DETAILS;
DROP TABLE IF EXISTS OAUTH_CLIENT_TOKEN;
DROP TABLE IF EXISTS OAUTH_ACCESS_TOKEN;
DROP TABLE IF EXISTS OAUTH_REFRESH_TOKEN;
DROP TABLE IF EXISTS OAUTH_CODE;
DROP TABLE IF EXISTS USER_ROLE;
DROP TABLE IF EXISTS "USER";
DROP TABLE IF EXISTS ROLE;

CREATE TABLE OAUTH_CLIENT_DETAILS
(
  CLIENT_ID VARCHAR(255) PRIMARY KEY NOT NULL,
  ACCESS_TOKEN_VALIDITY INTEGER,
  ADDITIONAL_INFORMATION VARCHAR(4096),
  AUTHORITIES VARCHAR(255),
  AUTHORIZED_GRANT_TYPES VARCHAR(255),
  AUTOAPPROVE VARCHAR(255),
  CLIENT_SECRET VARCHAR(255),
  REFRESH_TOKEN_VALIDITY INTEGER,
  RESOURCE_IDS VARCHAR(255),
  SCOPE VARCHAR(255),
  WEB_SERVER_REDIRECT_URI VARCHAR(255)
);

CREATE TABLE OAUTH_CLIENT_TOKEN (
  TOKEN_ID VARCHAR(256),
  TOKEN LONGVARBINARY,
  AUTHENTICATION_ID VARCHAR(256),
  USER_NAME VARCHAR(256),
  CLIENT_ID VARCHAR(256)
);

CREATE TABLE OAUTH_ACCESS_TOKEN (
  TOKEN_ID VARCHAR(256),
  TOKEN LONGVARBINARY,
  AUTHENTICATION_ID VARCHAR(256),
  USER_NAME VARCHAR(256),
  CLIENT_ID VARCHAR(256),
  AUTHENTICATION LONGVARBINARY,
  REFRESH_TOKEN VARCHAR(256)
);

CREATE TABLE OAUTH_REFRESH_TOKEN (
  TOKEN_ID VARCHAR(256),
  TOKEN LONGVARBINARY,
  AUTHENTICATION LONGVARBINARY
);

CREATE TABLE OAUTH_CODE (
  CODE VARCHAR(256),
  AUTHENTICATION LONGVARBINARY
);

create TABLE ROLE (
  ID VARCHAR(36) not null,
  ROLE_NAME VARCHAR(255),
  PRIMARY KEY (ID)
);

create TABLE "USER" (
  ID VARCHAR(36) not null,
  EMAIL VARCHAR(255) not null,
  PASSWORD VARCHAR(255),
  USERNAME VARCHAR(255) not null,
  PRIMARY KEY (ID)
);

create TABLE USER_ROLE (
  USER_ID VARCHAR(36) not null,
  ROLE_ID VARCHAR(36) not null,
  FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ID),
  FOREIGN KEY (USER_ID) REFERENCES "USER" (ID)
);